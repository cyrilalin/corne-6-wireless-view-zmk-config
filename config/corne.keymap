/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};

/ {
    behaviors {
        hold_boot: hold_boot {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_BOOT";
            bindings = <&bootloader>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <1000>;
            flavor = "tap-preferred";
        };

        forward_backward_slash: forward_backward_slash {
            compatible = "zmk,behavior-tap-dance";
            label = "FORWARD_BACKWARD_SLASH";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp BACKSLASH>;

            tapping-term-ms = <300>;
        };

        l_bracket_brace: l_bracket_brace {
            compatible = "zmk,behavior-tap-dance";
            label = "L_BRACKET_BRACE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp LEFT_BRACE>;

            tapping-term-ms = <300>;
        };

        r_bracket_brace: r_bracket_brace {
            compatible = "zmk,behavior-tap-dance";
            label = "R_BRACKET_BRACE";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET>, <&kp RIGHT_BRACE>;

            tapping-term-ms = <300>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&gresc        &kp Q  &kp W  &kp E      &kp R           &kp T        &kp Y            &kp U      &kp I      &kp O    &kp P                    &kp LC(BSPC)
&kp LEFT_ALT  &kp A  &kp S  &kp D      &kp F           &kp G        &kp H            &kp J      &kp K      &kp L    &kp SEMI                 &kp SQT
&kp LEFT_GUI  &kp Z  &kp X  &kp C      &kp V           &kp B        &kp N            &kp M      &kp COMMA  &kp DOT  &forward_backward_slash  &kp DELETE
                            &kp LCTRL  &kp LEFT_SHIFT  &lt 1 TAB    &lt 2 BACKSPACE  &kp SPACE  &kp RET
            >;
        };

        num_sym_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Num_Sym";
            bindings = <
&hold_boot 0 0  &kp EXCLAMATION  &kp AT    &kp HASH   &kp DOLLAR      &kp PERCENT    &kp CARET         &kp AMPERSAND     &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&trans          &kp N1           &kp N2    &kp N3     &kp N4          &kp N5         &kp N6            &kp N7            &kp N8        &kp N9                &kp N0                 &none
&trans          &kp EQUAL        &kp PLUS  &kp MINUS  &kp UNDERSCORE  &kp TILDE      &l_bracket_brace  &r_bracket_brace  &kp COMMA     &kp PERIOD            &kp SLASH              &none
                                           &trans     &trans          &trans         &trans            &trans            &trans
            >;

            label = "Num_Sym";
        };

        nav_fun_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Nav_Fun";
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &bt BT_NXT    &kp HOME    &kp LS(LC(TAB))  &kp UP_ARROW      &kp LC(TAB)  &kp C_VOLUME_UP    &hold_boot 0 0
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &bt BT_PRV    &kp INSERT  &kp LEFT         &kp DOWN          &kp RIGHT    &kp C_VOLUME_DOWN  &none
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &bt BT_CLR    &kp END     &kp C_PREVIOUS   &kp C_PLAY_PAUSE  &kp C_NEXT   &kp LG(LS(S))      &none
                         &trans   &trans   &trans        &trans      &trans           &trans
            >;

            label = "Nav_Fun";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
